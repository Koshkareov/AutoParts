@model AutoPartsWebSite.Models.Order
@using IdentityAutoPart.Models;
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.Owin;

@{
    ViewBag.Title = "Редактирование заказа #" + Model.Id;
}

<h2>Редактирование заказа # @Model.Id</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @*<h4>Order</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.Label("Пользователь", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    string userFN = "";
                    ApplicationUserManager userManager = HttpContext.Current.GetOwinContext().GetUserManager<ApplicationUserManager>();
                    var user = userManager.FindById(Model.UserId);
                    if (user != null)
                    {
                        userFN = user.FullName;
                    }
                }
               
                @userFN

                

                @*@Html.DropDownListFor(model => model.UserId, (SelectList)ViewBag.Users, htmlAttributes: new { @class = "form-control" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ Html.EnableClientValidation(false); }
                @Html.EditorFor(model => model.Summary, new { htmlAttributes = new { @class = "form-control" } })
                @{ Html.EnableClientValidation(true); }
                @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @Html.DropDownListFor(model => model.State, Model.getOrderStates(), htmlAttributes: new { @class = "form-control" })
                
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Вернуться к списку Заказов", "Index") | 
    @Html.ActionLink("Позиции заказа", "IndexOrderItems", new { id = Model.Id })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
