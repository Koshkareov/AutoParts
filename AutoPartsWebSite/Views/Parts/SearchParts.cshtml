@model IEnumerable<AutoPartsWebSite.Models.Part>


@{
    ViewBag.Title = "Поиск запчастей";
    int maxSearchItemCount = 1;
    int maxSearchRowsCount = 1;
    string searchMsgText = "Для поиска более 1-й позиции требуется авторизация";
}

@if (Request.IsAuthenticated && User.IsInRole("RegistredUser"))
{
    maxSearchItemCount = ViewBag.SearchLimit;
    maxSearchRowsCount = 10; //toDo: good to change it to maxSearchItemCount and add scroling
    searchMsgText = "Результат для поиска " + @ViewBag.SearchLimit + " позиций из " + @ViewBag.ItemsToSearch;
}

<div class="jumbotron">
    <h2>Поиск запчастей</h2>

    <p>
        @using (Html.BeginForm("SearchParts", "Parts", FormMethod.Post))
        {
        <p>
            @Html.TextArea("autopartNumbers", new { rows = maxSearchRowsCount, columns = 60 })
            @*@Html.Hidden("maxItemCount", maxSearchItemCount)*@            
            <input type="submit" value="Поиск" />
        </p>
        }       

        @if (ViewBag.SearchLimit < ViewBag.ItemsToSearch)
        {
            <div>
                @searchMsgText
            </div>
        }
    </div>


@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@
<table class="table">
    <tr>
        @*<th>
                @Html.DisplayNameFor(model => model.ImportId)
            </th>*@
        <th>
            @Html.DisplayName("Марка")
        </th>
        <th>
            @Html.DisplayName("Номер")
        </th>
        <th>
            @Html.DisplayName("Название")
        </th>
        <th>
            @Html.DisplayName("Описание")
        </th>
        <th>
            @Html.DisplayName("Объем")
        </th>
        <th>
            @Html.DisplayName("Вес")
        </th>
        <th>
            @Html.DisplayName("Срок поставки")
        </th>
        <th>
            @Html.DisplayName("Цена")
        </th>
        <th>
            @Html.DisplayName("Поставщик")
        </th>
        <th>
            @Html.DisplayName("Наличие")
        </th>
        @if (Request.IsAuthenticated && User.IsInRole("RegistredUser"))
        {
            <th>
                @Html.DisplayName("Количество")
            </th>
        }
    </tr>

@using (Html.BeginForm("AddToCartMulti", "Carts"))
{

    foreach (var item in Model)
    {
        <tr>
            @*<td>
                    @Html.DisplayFor(modelItem => item.ImportId)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Brand)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Number)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Details)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeliveryTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Supplier)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            @if (Request.IsAuthenticated && User.IsInRole("RegistredUser"))
            {
                <td>             
                    @Html.TextBox("Amount" + item.Id, "0", new { PartId = item.Id, type = "number", min = "0", max = item.Quantity })                
                </td>
            }

            @*<td>*@
                @*<input type="number" name="quantity" min="1" max="5">*@                
                @*@Html.TextBoxFor(modelItem => item.Number, "0", new { id = item.Id,  type= "number", min="0",max = item.Quantity })*@
                @*ToDo: Set and read values and id via script
                http://www.dotnet-tricks.com/Tutorial/mvc/K18L190813-How-to-get-textboxes-values-in-MVC4-created-by-jQuery.html*@
           @*</td>*@
            
                @*@using (Html.BeginForm("AddToCart", "Carts"))
                {
                    <td>
                        <div class="pull-right">
                            @Html.TextBox("Amount", "0", new { PartId = item.Id, type = "number", min = "0", max = item.Quantity })
                        </div>
                    </td>
                    <td>
                        <div class="pull-right">
                            @Html.Hidden("PartId", item.Id)
                            @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                            <input type="submit" class="btn btn-success" value="Добавить в корзину" />
                        </div>
                    </td>
                    
                }*@
            

            @*<td>
                    @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.Id })
                </td>*@
        </tr>
    }
    if (Request.IsAuthenticated && User.IsInRole("RegistredUser"))
    {
    <div class="pull-right">
        @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
        <input type="submit" class="btn btn-success" value="Добавить в корзину" />
    </div>
    }
 }

</table>
<p>
    @Html.ActionLink("Экспорт результатов в Excel", "Excel")
</p>
